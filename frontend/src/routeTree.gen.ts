/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UserIndexRouteImport } from './routes/user/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as ErrorsDownRouteImport } from './routes/errors/down'
import { Route as ErrorsDeniedRouteImport } from './routes/errors/denied'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UserIndexRoute = UserIndexRouteImport.update({
  id: '/user/',
  path: '/user/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorsDownRoute = ErrorsDownRouteImport.update({
  id: '/errors/down',
  path: '/errors/down',
  getParentRoute: () => rootRouteImport,
} as any)
const ErrorsDeniedRoute = ErrorsDeniedRouteImport.update({
  id: '/errors/denied',
  path: '/errors/denied',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/errors/denied': typeof ErrorsDeniedRoute
  '/errors/down': typeof ErrorsDownRoute
  '/admin': typeof AdminIndexRoute
  '/user': typeof UserIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/errors/denied': typeof ErrorsDeniedRoute
  '/errors/down': typeof ErrorsDownRoute
  '/admin': typeof AdminIndexRoute
  '/user': typeof UserIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/errors/denied': typeof ErrorsDeniedRoute
  '/errors/down': typeof ErrorsDownRoute
  '/admin/': typeof AdminIndexRoute
  '/user/': typeof UserIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/errors/denied' | '/errors/down' | '/admin' | '/user'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/errors/denied' | '/errors/down' | '/admin' | '/user'
  id:
    | '__root__'
    | '/'
    | '/errors/denied'
    | '/errors/down'
    | '/admin/'
    | '/user/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ErrorsDeniedRoute: typeof ErrorsDeniedRoute
  ErrorsDownRoute: typeof ErrorsDownRoute
  AdminIndexRoute: typeof AdminIndexRoute
  UserIndexRoute: typeof UserIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/': {
      id: '/user/'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/errors/down': {
      id: '/errors/down'
      path: '/errors/down'
      fullPath: '/errors/down'
      preLoaderRoute: typeof ErrorsDownRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/errors/denied': {
      id: '/errors/denied'
      path: '/errors/denied'
      fullPath: '/errors/denied'
      preLoaderRoute: typeof ErrorsDeniedRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ErrorsDeniedRoute: ErrorsDeniedRoute,
  ErrorsDownRoute: ErrorsDownRoute,
  AdminIndexRoute: AdminIndexRoute,
  UserIndexRoute: UserIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
